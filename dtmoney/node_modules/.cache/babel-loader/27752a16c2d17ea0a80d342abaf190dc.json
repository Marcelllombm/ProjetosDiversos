{"ast":null,"code":"var _jsxFileName = \"/home/marcelllombm/projetosDiversos/dtmoney/src/TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext({});\nexport function TransactionsProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  async function createTransaction(transactionInput) {\n    const response = await api.post('/transactions', { ...transactionInput,\n      createdAt: new Date()\n    });\n    const {\n      transaction\n    } = response.data;\n    setTransactions([...transactions, transaction]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsProvider, \"ASRwL10q/N/7LAX2c/hDHGN/eIs=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/home/marcelllombm/projetosDiversos/dtmoney/src/TransactionsContext.tsx"],"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transactionInput","post","createdAt","Date","transaction"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,gBAApB;;AA+BA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAC5C,EAD4C,CAAzC;AAKP,OAAO,SAASK,oBAAT,OAAoE;AAAA;;AAAA,MAAtC;AAACC,IAAAA;AAAD,GAAsC;AAC3E,QAAM,CAACC,YAAD,EAAgBC,eAAhB,IAAmCN,QAAQ,CAAgB,EAAhB,CAAjD;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,GAAG,CAACM,GAAJ,CAAQ,cAAR,EACCC,IADD,CACMC,QAAQ,IAAGH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADhC;AAEH,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeM,iBAAf,CAAiCC,gBAAjC,EAAqE;AAC/D,UAAMH,QAAQ,GAAG,MAAMR,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0B,EAC7C,GAAGD,gBAD0C;AAE7CE,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAFkC,KAA1B,CAAvB;AAIA,UAAM;AAACC,MAAAA;AAAD,QAAiBP,QAAQ,CAACC,IAAhC;AAEAJ,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBW,WAAlB,CAAD,CAAf;AACL;;AAED,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEX,MAAAA,YAAF;AAAiBM,MAAAA;AAAjB,KAArC;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKC;;GAzBeD,oB;;KAAAA,oB","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\n\n\ninterface Transaction {\n    id: number;\n    title: string;\n    amount: number;\n    type: string;\n    category:string;\n    createdAt: string;\n}\n\n// interface TransactionInput {\n//     title: string;\n//     amount: number;\n//     type: string;\n//     category:string;\n// }\ntype TransactionInput = Omit<Transaction, 'id' | 'createdAt'>\n\n// type TransactionInput = Pick<Transaction, 'title' |'amount' | 'type' | 'category' >\n\ninterface TransactionProviderPropos {\n    children: ReactNode;\n}\n\ninterface TransactonsContextData {\n    transactions: Transaction[];\n    createTransaction: (transaction: TransactionInput) => Promise<void>;\n}\n\nexport const TransactionsContext = createContext<TransactonsContextData>(\n    {} as TransactonsContextData\n\n);\n\nexport function TransactionsProvider({children}: TransactionProviderPropos){\nconst [transactions , setTransactions] = useState<Transaction[]>([]);\n\n    \n    \nuseEffect(() => {\n    api.get('transactions')\n    .then(response=> setTransactions(response.data.transactions))\n}, [])\n\nasync function createTransaction(transactionInput: TransactionInput) {\n      const response = await api.post('/transactions', {\n          ...transactionInput,\n          createdAt: new Date(),\n    });\n      const {transaction } = response.data;\n\n      setTransactions([...transactions, transaction])\n}\n\nreturn (\n    <TransactionsContext.Provider value={{ transactions , createTransaction} }>\n        {children}\n    </TransactionsContext.Provider>\n);\n}"]},"metadata":{},"sourceType":"module"}