{"ast":null,"code":"var _jsxFileName = \"/home/marcelllombm/projetosDiversos/dtmoney/src/TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext([]);\nexport function TransactionsProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  function createTransaction(transaction) {\n    api.post('/transactions', transaction);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: transactions,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsProvider, \"ASRwL10q/N/7LAX2c/hDHGN/eIs=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/home/marcelllombm/projetosDiversos/dtmoney/src/TransactionsContext.tsx"],"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transaction","post"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,gBAApB;;AA0BA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAAgB,EAAhB,CAAzC;AAEP,OAAO,SAASK,oBAAT,OAAoE;AAAA;;AAAA,MAAtC;AAACC,IAAAA;AAAD,GAAsC;AAC3E,QAAM,CAACC,YAAD,EAAgBC,eAAhB,IAAmCN,QAAQ,CAAgB,EAAhB,CAAjD;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,GAAG,CAACM,GAAJ,CAAQ,cAAR,EACCC,IADD,CACMC,QAAQ,IAAGH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADhC;AAEH,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASM,iBAAT,CAA2BC,WAA3B,EAA0D;AAClDX,IAAAA,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0BD,WAA1B;AACP;;AAED,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAGP,YAAtC;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKC;;GAnBeD,oB;;KAAAA,oB","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\n\n\ninterface Transaction {\n    id: number;\n    title: string;\n    amount: number;\n    type: string;\n    category:string;\n    createdAt: string;\n}\n\n// interface TransactionInput {\n//     title: string;\n//     amount: number;\n//     type: string;\n//     category:string;\n// }\ntype TransactionInput = Omit<Transaction, 'id' | 'createdAt'>\n\n// type TransactionInput = Pick<Transaction, 'title' |'amount' | 'type' | 'category' >\n\ninterface TransactionProviderPropos {\n    children: ReactNode;\n}\n\nexport const TransactionsContext = createContext<Transaction[]>([]);\n\nexport function TransactionsProvider({children}: TransactionProviderPropos){\nconst [transactions , setTransactions] = useState<Transaction[]>([]);\n\n    \n    \nuseEffect(() => {\n    api.get('transactions')\n    .then(response=> setTransactions(response.data.transactions))\n}, [])\n\nfunction createTransaction(transaction: TransactionInput) {\n        api.post('/transactions', transaction)\n}\n\nreturn (\n    <TransactionsContext.Provider value={ transactions }>\n        {children}\n    </TransactionsContext.Provider>\n);\n}"]},"metadata":{},"sourceType":"module"}